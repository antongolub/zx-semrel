name: Release

on:
  push:
    branches: [ master ]

env:
  SSH_AUTH_SOCK_FIRST: /tmp/ssh_agent_first.sock

permissions:
  checks: read
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: master

      - uses: actions/setup-node@v2
        with:
          node-version: 16

      # https://stackoverflow.com/questions/26372417/github-oauth2-token-how-to-restrict-access-to-read-a-single-private-repo
      - name: Setup SSH Agent
        run: |
          # load deploy keys from the secrets
          echo "${{ secrets.DEPLOY_KEY }}" > ./ssh_key_first

          # set chmods (required to use keys)
          chmod 0600 ./ssh_key_*

          # start agents
          ssh-agent -a $SSH_AUTH_SOCK_FIRST > /dev/null

          # add each key to their own ssh agent
          SSH_AUTH_SOCK=$SSH_AUTH_SOCK_FIRST ssh-add ./ssh_key_first

          # you can now remove keys from the filesystem
          rm -f ./ssh_key_*

      - name: Create .npmrc
        run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Run release.mjs
        run: npx zx ./release.mjs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SSH_AUTH_SOCK: ${{ env.SSH_AUTH_SOCK_FIRST }}
